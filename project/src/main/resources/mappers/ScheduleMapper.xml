<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.project.dao.ScheduleDAO">
	<select id="selectScheduleByRoute" resultType="kr.kh.project.vo.ScheduleVO">
		select
			schedule.*,
		    addtime(addtime(subtime(sk_start_time, ai_start.ai_standard_time), sk_time), ai_end.ai_standard_time) as sk_end_time,
		    ro_ai_start,
		    ai_start.ai_name as ai_start_name,
		    ro_ai_end,
		    ai_end.ai_name as ai_end_name,
		    ap_al_name
		from
			schedule
				join
			airplane on ap_num = sk_ap_num
				join
			route on sk_ro_num = ro_num
				join
			airport as ai_start on ai_start.ai_num = ro_ai_start
				join
			airport as ai_end on ai_end.ai_num = ro_ai_end
		where
			sk_state = true and sk_ro_num = #{ro_num} and date_format(sk_start_time, '%Y-%m-%d') = date(#{startDate}) and sk_start_time >= now()
		order by
			sk_start_time asc
	</select>
	<select id="getSchedulesByRouteNumber" resultType="kr.kh.project.vo.ScheduleVO">
		SELECT * FROM schedule
		WHERE sk_ro_num = #{sk_ro_num}
	</select>
	<update id="deleteScheduleByNumber">
		update schedule
		set
			sk_state = false
		where
			sk_num = #{sk_num}
	</update>
	<select id="selectSchedule" resultType="kr.kh.project.vo.ScheduleVO">
		select
			schedule.*,
		    addtime(addtime(subtime(sk_start_time, ai_start.ai_standard_time), sk_time), ai_end.ai_standard_time) as sk_end_time,
		    ro_ai_start,
		    ai_start.ai_name as ai_start_name,
		    ro_ai_end,
		    ai_end.ai_name as ai_end_name,
		    ap_al_name
		from
			schedule
				join
			airplane on ap_num = sk_ap_num
				join
			route on sk_ro_num = ro_num
				join
			airport as ai_start on ai_start.ai_num = ro_ai_start
				join
			airport as ai_end on ai_end.ai_num = ro_ai_end
		where
			sk_num = #{sk_num}
		order by
			sk_start_time asc
	</select>
	<select id="selectScheduleList" resultType="kr.kh.project.vo.ScheduleVO">
		select
			schedule.*,
		    addtime(addtime(subtime(sk_start_time, ai_start.ai_standard_time), sk_time), ai_end.ai_standard_time) as sk_end_time,
		    ro_ai_start,
		    ai_start.ai_name as ai_start_name,
		    ro_ai_end,
		    ai_end.ai_name as ai_end_name,
		    ap_al_name,
		    if(sk_start_time > now(), true, false) as del_res
		from
			schedule
				join
			airplane on ap_num = sk_ap_num
				join
			route on sk_ro_num = ro_num
				join
			airport as ai_start on ai_start.ai_num = ro_ai_start
				join
			airport as ai_end on ai_end.ai_num = ro_ai_end
		where
			sk_state = 1
		order by
			sk_num desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="getTotalCount" resultType="int">
		select
			count(*)
		from
			schedule
		where
			sk_state = 1
	</select>
	<insert id="insertSchedule">
		insert into schedule(sk_ap_num, sk_ro_num, sk_start_time, sk_time, sk_price)
		values
			(#{schedule.sk_ap_num}, #{schedule.sk_ro_num}, #{schedule.sk_start_time_str}, #{schedule.sk_time}, #{schedule.sk_price});
	</insert>
	<update id="deleteScheduleByApNum">
		update schedule
		set
			sk_state = false
		where
			sk_ap_num = #{ap_num}
	</update>
	<update id="deleteScheduleByRoNum">
		update schedule
		set
			sk_state = false
		where
			sk_ro_num = #{ro_num}
	</update>
</mapper>
